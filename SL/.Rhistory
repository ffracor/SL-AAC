prune <- prune.tree(temp_tree_model, best = best, k = k)
temp_fitt_value <- predict(prune, newdata = data[-train, temp_features])
######
#temp_fitt_value <- predict(temp_tree_model, newdata = data[-train, temp_features])
#temp_test_MSE = mean((data$Sleep.efficiency[-train] - temp_fitt_value)^2)
return (temp_fitt_value)
}
res_predizioni_3 <- boot(x, get_alpha_tree, R = 2000) #attenzione 'x' minuscola in questo caso
get_alpha_tree <- function(data, index){
temp_train <- sample(train, length(train), replace = TRUE)
temp_features <- sample(10, 5, replace = FALSE)
temp_features[temp_features==4] <- 11
temp_data <- data[, temp_features]
temp_tree_model <- tree(data$Sleep.efficiency~ . , data=temp_data, subset= temp_train, split = 'gini')
###parte nuova
tree_cv <- cv.tree(temp_tree_model, FUN = prune.tree)
best <- min(tree_cv$size[tree_cv$dev == min(tree_cv$dev)])
k <- min(tree_cv$k[tree_cv$dev == min(tree_cv$dev)]) #alpha in the book
prune <- prune.tree(temp_tree_model, best = best, k = k)
temp_fitt_value <- predict(prune, newdata = data[-train, temp_features])
######
#temp_fitt_value <- predict(temp_tree_model, newdata = data[-train, temp_features])
#temp_test_MSE = mean((data$Sleep.efficiency[-train] - temp_fitt_value)^2)
return (temp_fitt_value)
}
res_predizioni_3 <- boot(x, get_alpha_tree, R = 2000) #attenzione 'x' minuscola in questo caso
get_alpha_tree <- function(data, index){
temp_train <- sample(train, length(train), replace = TRUE)
temp_features <- sample(10, 5, replace = FALSE)
temp_features[temp_features==4] <- 11
temp_tree_model <- tree(data$Sleep.efficiency~ . , data= data[,temp_features], subset= temp_train, split = 'gini')
###parte nuova
#tree_cv <- cv.tree(temp_tree_model, FUN = prune.tree)
#best <- min(tree_cv$size[tree_cv$dev == min(tree_cv$dev)])
#k <- min(tree_cv$k[tree_cv$dev == min(tree_cv$dev)]) #alpha in the book
prune <- prune.tree(temp_tree_model)
temp_fitt_value <- predict(prune, newdata = data[-train, temp_features])
######
#temp_fitt_value <- predict(temp_tree_model, newdata = data[-train, temp_features])
#temp_test_MSE = mean((data$Sleep.efficiency[-train] - temp_fitt_value)^2)
return (temp_fitt_value)
}
res_predizioni_3 <- boot(x, get_alpha_tree, R = 2000) #attenzione 'x' minuscola in questo caso
get_alpha_tree <- function(data, index){
temp_train <- sample(train, length(train), replace = TRUE)
temp_features <- sample(10, 5, replace = FALSE)
temp_features[temp_features==4] <- 11
temp_tree_model <- tree(data$Sleep.efficiency~ . , data= data[,temp_features], subset= temp_train, split = 'gini')
###parte nuova
#tree_cv <- cv.tree(temp_tree_model, FUN = prune.tree)
#best <- min(tree_cv$size[tree_cv$dev == min(tree_cv$dev)])
#k <- min(tree_cv$k[tree_cv$dev == min(tree_cv$dev)]) #alpha in the book
prune <- prune.tree(temp_tree_model)
temp_fitt_value <- predict(prune, newdata = data[-train, temp_features], type='class')
######
#temp_fitt_value <- predict(temp_tree_model, newdata = data[-train, temp_features])
#temp_test_MSE = mean((data$Sleep.efficiency[-train] - temp_fitt_value)^2)
return (temp_fitt_value)
}
res_predizioni_3 <- boot(x, get_alpha_tree, R = 2000) #attenzione 'x' minuscola in questo caso
#analisi preliminare delle variabili
var_dati <- setNames(numeric(length(colnames(x))), colnames(x))
for(i in 1:length(var_dati)){
var_dati[i] <- var(x[,i])
hist(x[,i], main=names(var_dati)[i], sub="")
}
View(x)
#istorammi
hist(x[,1], xlab = "Age", ylab= "Frequency")
#istorammi
hist(x[,1], main="" , xlab = "Age", ylab= "Frequency")
hist(x[,1], main="" , xlab = "Age", ylab= "Frequency")
corr_matrix <- cor(x)
View(corr_matrix)
plot(corr_matrix)
#istorammi
hist(x[,1], main="" , xlab = "Age", ylab= "Frequency")
# import libraries
install.packages("corrplot")
corr_matrix <- cor(x)
corrplot(corr_matrix, method="circle")
library(corrplot)
corrplot(corr_matrix, method="circle")
corrplot(corr_matrix, type="upper", order="hclust")
#istorammi
par(mfrow=c(4,3))
hist(x[,1], main="" , xlab = "Age", ylab= "Frequency")
hist(x[,2], main="" , xlab = "Gender", ylab= "Frequency")
hist(x[,3], main="" , xlab = "Sleep Duration", ylab= "Frequency")
hist(x[,4], main="" , xlab = "Sleep Efficiency", ylab= "Frequency")
hist(x[,5], main="" , xlab = "REM Sleep Percentage", ylab= "Frequency")
hist(x[,6], main="" , xlab = "Deep Sleep Percentage", ylab= "Frequency")
hist(x[,7], main="" , xlab = "Awakenings", ylab= "Frequency")
hist(x[,8], main="" , xlab = "Caffeine Consumption", ylab= "Frequency")
hist(x[,9], main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
hist(x[,10], main="" , xlab = "Smoking Status", ylab= "Frequency")
hist(x[,11], main="" , xlab = "Exercise Frequency", ylab= "Frequency")
install.packages(gridExtra)
install.packages("gridExtra")
library(gridExtra)
p1 <- ggplot(data.frame(x=x[,1]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Age", y="Frequency")
p2 <- ggplot(data.frame(x=x[,2]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Gender", y="Frequency")
p3 <- ggplot(data.frame(x=x[,3]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Sleep Duration", y="Frequency")
library(gridExtra)
p1 <- ggplot(data.frame(x=x[,1]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Age", y="Frequency")
library(ggplot2)
p1 <- ggplot(data.frame(x=x[,1]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Age", y="Frequency")
p2 <- ggplot(data.frame(x=x[,2]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Gender", y="Frequency")
p3 <- ggplot(data.frame(x=x[,3]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Sleep Duration", y="Frequency")
p4 <- ggplot(data.frame(x=x[,4]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Sleep Efficiency", y="Frequency")
p5 <- ggplot(data.frame(x=x[,5]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="REM Sleep Percentage", y="Frequency")
p6 <- ggplot(data.frame(x=x[,6]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Deep Sleep Percentage", y="Frequency")
p7 <- ggplot(data.frame(x=x[,7]), aes(x=x)) +geom_histogram(binwidth=1) +
labs(x="Awakenings", y="Frequency")
p8 <- ggplot(data.frame(x=x[,8]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Caffeine Consumption", y="Frequency")
p9 <- ggplot(data.frame(x=x[,9]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Alcohol Consumption", y="Frequency")
p10 <- ggplot(data.frame(x=x[,10]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Smoking Status", y="Frequency")
p11 <- ggplot(data.frame(x=x[,11]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Exercise Frequency", y="Frequency")
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, ncol=4)
p1<-hist(x[,1], main="" , xlab = "Age", ylab= "Frequency")
p2<-hist(x[,2], main="" , xlab = "Gender", ylab= "Frequency")
p3<-hist(x[,3], main="" , xlab = "Sleep Duration", ylab= "Frequency")
p4<-hist(x[,4], main="" , xlab = "Sleep Efficiency", ylab= "Frequency")
p5<-hist(x[,5], main="" , xlab = "REM Sleep Percentage", ylab= "Frequency")
p6<-hist(x[,6], main="" , xlab = "Deep Sleep Percentage", ylab= "Frequency")
p7<-hist(x[,7], main="" , xlab = "Awakenings", ylab= "Frequency")
p8<-hist(x[,8], main="" , xlab = "Caffeine Consumption", ylab= "Frequency")
p9<-hist(x[,9], main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
p10<-hist(x[,10], main="" , xlab = "Smoking Status", ylab= "Frequency")
p11<-hist(x[,11], main="" , xlab = "Exercise Frequency", ylab= "Frequency")
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, ncol=4)
p1<-hist(x[,1], main="" , xlab = "Age", ylab= "Frequency")
# clear all environment variable
rm(list = ls())
# Read Dataset from csv file
x = read.csv("Sleep_Efficiency.csv")
# creating dummy variable for gender and smoking status
x$Smoking.status <- as.numeric(as.factor(x$Smoking.status))
x$Smoking.status <- ifelse(x$Smoking.status==2,1,0)
x$Gender <- ifelse(x$Gender=="Male",1,0)
# removing useless column
x <- x[,-1]
x <- x[,-3]
x <- x[,-3]
x <- x[,-7]
# omitting NA and creating x and y variables
x <- na.omit(x)
y <- x$Sleep.efficiency
#analisi preliminare delle variabili
var_dati <- setNames(numeric(length(colnames(x))), colnames(x))
for(i in 1:length(var_dati)){
var_dati[i] <- var(x[,i])
hist(x[,i], main=names(var_dati)[i], sub="")
}
corr_matrix <- cor(x)
corrplot(corr_matrix, type="upper", order="hclust")
corr_matrix <- cor(x)
corrplot(corr_matrix, type="upper", order="hclust")
p1<-hist(x[,1], main="" , xlab = "Age", ylab= "Frequency")
p2<-hist(x[,2], main="" , xlab = "Gender", ylab= "Frequency")
p3<-hist(x[,3], main="" , xlab = "Sleep Duration", ylab= "Frequency")
p4<-hist(x[,4], main="" , xlab = "Sleep Efficiency", ylab= "Frequency")
p5<-hist(x[,5], main="" , xlab = "REM Sleep Percentage", ylab= "Frequency")
p6<-hist(x[,6], main="" , xlab = "Deep Sleep Percentage", ylab= "Frequency")
p7<-hist(x[,7], main="" , xlab = "Awakenings", ylab= "Frequency")
p8<-hist(x[,8], main="" , xlab = "Caffeine Consumption", ylab= "Frequency")
p9<-hist(x[,9], main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
p10<-hist(x[,10], main="" , xlab = "Smoking Status", ylab= "Frequency")
p11<-hist(x[,11], main="" , xlab = "Exercise Frequency", ylab= "Frequency")
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, ncol=4)
p1 <- ggplot(data.frame(x=x[,1]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Age", y="Frequency")
p2 <- ggplot(data.frame(x=x[,2]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Gender", y="Frequency")
p3 <- ggplot(data.frame(x=x[,3]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Sleep Duration", y="Frequency")
p4 <- ggplot(data.frame(x=x[,4]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Sleep Efficiency", y="Frequency")
p5 <- ggplot(data.frame(x=x[,5]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="REM Sleep Percentage", y="Frequency")
p6 <- ggplot(data.frame(x=x[,6]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Deep Sleep Percentage", y="Frequency")
p7 <- ggplot(data.frame(x=x[,7]), aes(x=x)) +geom_histogram(binwidth=1) +
labs(x="Awakenings", y="Frequency")
p8 <- ggplot(data.frame(x=x[,8]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Caffeine Consumption", y="Frequency")
p9 <- ggplot(data.frame(x=x[,9]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Alcohol Consumption", y="Frequency")
p10 <- ggplot(data.frame(x=x[,10]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Smoking Status", y="Frequency")
p11 <- ggplot(data.frame(x=x[,11]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Exercise Frequency", y="Frequency")
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, ncol=4)
# clear all environment variable
rm(list = ls())
# Read Dataset from csv file
x = read.csv("Sleep_Efficiency.csv")
# creating dummy variable for gender and smoking status
x$Smoking.status <- as.numeric(as.factor(x$Smoking.status))
x$Smoking.status <- ifelse(x$Smoking.status==2,1,0)
x$Gender <- ifelse(x$Gender=="Male",1,0)
# removing useless column
x <- x[,-1]
x <- x[,-3]
x <- x[,-3]
x <- x[,-7]
# omitting NA and creating x and y variables
x <- na.omit(x)
y <- x$Sleep.efficiency
#analisi preliminare delle variabili
var_dati <- setNames(numeric(length(colnames(x))), colnames(x))
corr_matrix <- cor(x)
corrplot(corr_matrix, type="upper", order="hclust")
p1<-hist(x[,1], main="" , xlab = "Age", ylab= "Frequency")
p2<-hist(x[,2], main="" , xlab = "Gender", ylab= "Frequency")
p2<-barplot(x[,2], main="" , xlab = "Gender", ylab= "Frequency")
p2 <- ggplot(data.frame(x=x[,2]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Gender", y="Frequency")
ggplot(data.frame(x=x[,2]), aes(x=x)) +
geom_histogram(binwidth=1) +
labs(x="Gender", y="Frequency")
ggplot(x[,2], aes(x=reorder(x[,2], x[,2], function(x)-length(x)))) +
geom_bar(fill='gray') +  labs(x='Gender', y = 'Frequency')
p3<-hist(x[,3], main="" , xlab = "Sleep Duration", ylab= "Frequency")
ggplot(x, aes(x=reorder(x[,2], x[,2], function(x)-length(x)))) +
geom_bar(fill='gray') +  labs(x='Gender', y = 'Frequency')
p2<-barplot(x[,2], main="" , xlab = "Gender", ylab= "Frequency")
p2<-hist(x[,2], main="" , xlab = "Gender", ylab= "Frequency")
ggplot(x, aes(x=reorder(x[,2], x[,2], function(x)-length(x)))) +
geom_bar(fill='gray') +  labs(x='Gender', y = 'Frequency')
p3<-hist(x[,3], main="" , xlab = "Sleep Duration", ylab= "Frequency")
p8<-hist(x[,8], main="" , xlab = "Caffeine Consumption", ylab= "Frequency")
p7<-hist(x[,7], main="" , xlab = "Awakenings", ylab= "Frequency")
p8<-hist(x[,8], main="" , xlab = "Caffeine Consumption", ylab= "Frequency")
p8<- p2<-ggplot(x, aes(x=reorder(x[,8], x[,8], function(x)-length(x)))) +
geom_bar(fill='gray') +  labs(x='Caffeine Consumption', y = 'Frequency')
p8
p2<-ggplot(x[,2], aes(x=x[,2]) +
p2<-ggplot(x, aes(x=x[,2]) +
p2<-ggplot(x, aes(x=x[,2]) +
geom_bar(fill='gray') +  labs(x='Gender', y = 'Frequency'))
p2
p8 <- ggplot(x, aes(x=x[,8])) + geom_bar(fill='gray') + labs(x='Caffeine Consumption', y = 'Frequency')
p8
p1<-hist(x[,1], main="" , xlab = "Age", ylab= "Frequency")
p8 <- ggplot(x, aes(x=x[,8])) + geom_bar(fill='gray') + labs(x='Caffeine Consumption', y = 'Frequency')
p8
plot(x$Caffeine.consumption)
plot(x$Gender)
plot(asfactor(x$Gender)
plot(asfactor(x$Gender))
asfactor(x$Gender)
p8 <- ggplot(x, aes(x=x[,8])) + geom_bar(fill='gray') + labs(x='Caffeine Consumption', y = 'Frequency') + theme(panel.grid.major = element_blank())
p8
p8 <- ggplot(x, aes(x=x[,8])) + geom_bar(fill='gray') + labs(x='Caffeine Consumption', y = 'Frequency') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p8
+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = 'white')
+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
p8 <- ggplot(x, aes(x=x[,8])) + geom_bar(fill='gray')
+ labs(x='Caffeine Consumption', y = 'Frequency')
p8 <- ggplot(x, aes(x=x[,8])) + geom_bar(fill='gray')+ labs(x='Caffeine Consumption', y = 'Frequency')+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
p8
p8 <- ggplot(x, aes(x=x[,8])) + geom_bar(fill='gray')+
labs(x='Caffeine Consumption', y = 'Frequency')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),  panel.border = element_rect(color = "black", fill = NA, size = 1))
p8 <- ggplot(x, aes(x=x[,8])) + geom_bar(fill='gray')+
labs(x='Caffeine Consumption', y = 'Frequency')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),  panel.border = linewidth(color = "black", fill = NA, size = 1))
p8 <- ggplot(x, aes(x=x[,8])) + geom_bar(fill='gray')+
labs(x='Caffeine Consumption', y = 'Frequency')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),  panel.border = element_rect(color = "black", fill = NA, size = 1))
p8
p1
p1<-hist(x[,1], main="" , xlab = "Age", ylab= "Frequency")
p8
p2 <- ggplot(data.frame(x=x[,2]), aes(x=x)) +
geom_histogram(binwidth=10, fill="gray", color="black") +
labs(x="Gender", y="Frequency")
p2
p8 <- ggplot(x, aes(x=x[,8])) + geom_bar(binwidth=10, fill="gray", color="black")+
labs(x='Caffeine Consumption', y = 'Frequency')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),  panel.border = element_rect(color = "black", fill = NA, size = 1))
p8 <- ggplot(x, aes(x=x[,8])) + geom_bar(fill="gray", color="black")+
labs(x='Caffeine Consumption', y = 'Frequency')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),  panel.border = element_rect(color = "black", fill = NA, size = 1))
p8
p8 <- ggplot(x, aes(x=x[,8])) + geom_bar(fill="gray", color="black")+
labs(x='Caffeine Consumption', y = 'Frequency')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),  panel.border = element_rect(color = "black", fill = NA, size = 1) +
scale_y_continuos(breaks=seq(0, 100, 10), limits=c(0, 100)))
barplot(x[,2])
barplot(prop.table(table(x[,2])))
barplot(prop.table(table(x[,2])), main="" , xlab = "Caffeine Consumption", ylab= "Frequency")
p8 <- barplot(prop.table(table(x[,8])), main="" , xlab = "Caffeine Consumption", ylab= "Frequency")
p10<-hist(prop.table(table(x[,10])), main="" , xlab = "Smoking Status", ylab= "Frequency")
p2<-barplot(prop.table(table(x[,2])), main="" , xlab = "Gender", ylab= "Frequency")
p10<-hist(prop.table(table(x[,10])), main="" , xlab = "Smoking Status", ylab= "Frequency")
p2<-barplot(prop.table(table(x[,2])), main="" , xlab = "Gender", ylab= "Frequency")
p10<-barplot(prop.table(table(x[,10])), main="" , xlab = "Smoking Status", ylab= "Frequency")
p11<-hist(x[,11], main="" , xlab = "Exercise Frequency", ylab= "Frequency")
p11<-barplot(prop.table(table(x[,11])), main="" , xlab = "Exercise Frequency", ylab= "Frequency")
p9<-hist(x[,9], main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
p8 <- barplot(prop.table(table(x[,8])), main="" , xlab = "Caffeine Consumption", ylab= "Frequency")
p9<-hist(x[,9], main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
p9<-barplot(prop.table(table(x[,9])), main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
# Read Dataset from csv file
x = read.csv("Sleep_Efficiency.csv")
# creating dummy variable for gender and smoking status
x$Smoking.status <- as.numeric(as.factor(x$Smoking.status))
x$Smoking.status <- ifelse(x$Smoking.status==2,1,0)
x$Gender <- ifelse(x$Gender=="Male",1,0)
# removing useless column
x <- x[,-1]
x <- x[,-3]
x <- x[,-3]
x <- x[,-7]
# omitting NA and creating x and y variables
x <- na.omit(x)
y <- x$Sleep.efficiency
View(x)
p9<-barplot(prop.table(table(x$Alcohol.consumption)), main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
p9
p9<-barplot(prop.table(table(x$Alcohol.consumption)), main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
barplot(prop.table(table(x$Alcohol.consumption)), main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
barplot(prop.table(table(x$Alcohol.consumption)), main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
barplot(prop.table(table(x$Alcohol.consumption)), main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
p8 <- barplot(prop.table(table(x$Caffeine.consumption)), main="" , xlab = "Caffeine Consumption", ylab= "Frequency")
p1<-hist(x$Age, main="" , xlab = "Age", ylab= "Frequency")
p2<-barplot(prop.table(table(x$Gender)), main="" , xlab = "Gender", ylab= "Frequency")
p9<-barplot(prop.table(table(x$Alcohol.consumption)), main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
p10<-barplot(prop.table(table(x[,10])), main="" , xlab = "Smoking Status", ylab= "Frequency")
p11<-barplot(prop.table(table(x[,11])), main="" , xlab = "Exercise Frequency", ylab= "Frequency")
p7<-hist(x$Awakenings, main="" , xlab = "Awakenings", ylab= "Frequency")
p7<-barplot(prop.table(table(x$Awakenings)), main="" , xlab = "Caffeine Consumption", ylab= "Frequency")
p7<-barplot(prop.table(table(x$Awakenings)), main="" , xlab = "Awakenings", ylab= "Frequency")
p7<-hist(x$Awakenings, main="" , xlab = "Awakenings", ylab= "Frequency")
p7<-barplot(prop.table(table(x$Awakenings)), main="" , xlab = "Awakenings", ylab= "Frequency")
p7<-hist(x$Awakenings, main="" , xlab = "Awakenings", ylab= "Frequency")
p7<-barplot(prop.table(table(x$Awakenings)), main="" , xlab = "Awakenings", ylab= "Frequency")
p9<-barplot(table(x$Alcohol.consumption), main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
p9<-barplot(table(x$Alcohol.consumption), main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
p10<-barplot(table(x$Smoking.status), main="" , xlab = "Smoking Status", ylab= "Frequency")
p11<-barplot(table(x$Exercise.frequency), main="" , xlab = "Exercise Frequency", ylab= "Frequency")
p9<-barplot(table(x$Alcohol.consumption), main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
p10<-barplot(table(x$Smoking.status), main="" , xlab = "Smoking Status", ylab= "Frequency")
p11<-barplot(table(x$Exercise.frequency), main="" , xlab = "Exercise Frequency", ylab= "Frequency")
p8 <- barplot(prop.table(table(x$Caffeine.consumption)), main="" , xlab = "Caffeine Consumption", ylab= "Frequency")
p7<-barplot(prop.table(table(x$Awakenings)), main="" , xlab = "Awakenings", ylab= "Frequency")
p7<-barplot(table(x$Awakenings), main="" , xlab = "Awakenings", ylab= "Frequency")
p8 <- barplot(table(x$Caffeine.consumption), main="" , xlab = "Caffeine Consumption", ylab= "Frequency")
p7<-barplot(table(x$Awakenings), main="" , xlab = "Awakenings", ylab= "Frequency")
p7<-hist(x$Awakenings, main="" , xlab = "Awakenings", ylab= "Frequency")
p7<-barplot(table(x$Awakenings), main="" , xlab = "Awakenings", ylab= "Frequency")
p2<-barplot(table(x$Gender), main="" , xlab = "Gender", ylab= "Frequency")
p1<-hist(x$Age, main="" , xlab = "Age", ylab= "Frequency")
p2<-barplot(table(x$Gender), main="" , xlab = "Gender", ylab= "Frequency")
p3<-hist(x$Sleep.duration, main="" , xlab = "Sleep Duration", ylab= "Frequency")
p4<-hist(x$Sleep.efficiency, main="" , xlab = "Sleep Efficiency", ylab= "Frequency")
p5<-hist(x$REM.sleep.percentage, main="" , xlab = "REM Sleep Percentage", ylab= "Frequency")
p6<-hist(x$Deep.sleep.percentage, main="" , xlab = "Deep Sleep Percentage", ylab= "Frequency")
p7<-barplot(table(x$Awakenings), main="" , xlab = "Awakenings", ylab= "Frequency")
p8 <- barplot(table(x$Caffeine.consumption), main="" , xlab = "Caffeine Consumption", ylab= "Frequency")
p9<-barplot(table(x$Alcohol.consumption), main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
p1<-hist(x$Age, main="" , xlab = "Age", ylab= "Frequency")
p2<-barplot(table(x$Gender), main="" , xlab = "Gender", ylab= "Frequency")
p3<-hist(x$Sleep.duration, main="" , xlab = "Sleep Duration", ylab= "Frequency")
p1<-hist(x$Age, main="" , xlab = "Age", ylab= "Frequency")
p2<-barplot(table(x$Gender), main="" , xlab = "Gender", ylab= "Frequency")
p3<-barplot(table(x$Sleep.duration), main="" , xlab = "Sleep Duration", ylab= "Frequency")
p4<-hist(x$Sleep.efficiency, main="" , xlab = "Sleep Efficiency", ylab= "Frequency")
p5<-hist(x$REM.sleep.percentage, main="" , xlab = "REM Sleep Percentage", ylab= "Frequency")
p6<-hist(x$Deep.sleep.percentage, main="" , xlab = "Deep Sleep Percentage", ylab= "Frequency")
p7<-barplot(table(x$Awakenings), main="" , xlab = "Awakenings", ylab= "Frequency")
p8 <- barplot(table(x$Caffeine.consumption), main="" , xlab = "Caffeine Consumption", ylab= "Frequency")
p9<-barplot(table(x$Alcohol.consumption), main="" , xlab = "Alcohol Consumption", ylab= "Frequency")
p10<-barplot(table(x$Smoking.status), main="" , xlab = "Smoking Status", ylab= "Frequency")
p11<-barplot(table(x$Exercise.frequency), main="" , xlab = "Exercise Frequency", ylab= "Frequency")
p3<-barplot(table(x$Sleep.duration), main="" , xlab = "Sleep Duration", ylab= "Frequency")
p1<-hist(x$Age, main="" , xlab = "Age", ylab= "Frequency")
p2<-barplot(table(x$Gender), main="" , xlab = "Gender", ylab= "Frequency")
p3<-barplot(table(x$Sleep.duration), main="" , xlab = "Sleep Duration", ylab= "Frequency")
View(x)
x <- 2*x[,3]
x[,3] <- 2*x[,3]
# Read Dataset from csv file
x = read.csv("Sleep_Efficiency.csv")
# creating dummy variable for gender and smoking status
x$Smoking.status <- as.numeric(as.factor(x$Smoking.status))
x$Smoking.status <- ifelse(x$Smoking.status==2,1,0)
x$Gender <- ifelse(x$Gender=="Male",1,0)
# removing useless column
x <- x[,-1]
x <- x[,-3]
x <- x[,-3]
x <- x[,-7]
x$Sleep.duration <- 2*x$Sleep.duration
# omitting NA and creating x and y variables
x <- na.omit(x)
y <- x$Sleep.efficiency
# saving number of original columns
dim = ncol(x)
n = 100
set.seed(42)
train <- sample(dim(x)[1],floor(dim(x)[1]*0.75),replace = FALSE);
test_fix <- sample(nrow(x), floor(nrow(x) * 0.25), replace = TRUE)
x <- x[-test_fix,]
#inizializzo il vettore per il conteggio
col_name <- c("(Intercept)",colnames(x))
contatore_vect_POISS <- setNames(numeric(length(col_name)), col_name)
dim = length(col_name)
# Define bootstrap function
get_alpha_POISS <- function(data,index){
temp_train <- sample(nrow(data), floor(nrow(data) * 0.75), replace = TRUE)
pois_mdl <- glm(Sleep.duration ~ . , data = x[temp_train,] , family = poisson)
step_pois <- stepAIC(pois_mdl, direction = "both",
trace = FALSE)
#parte per conteggio delle comparse
coeff_stimati <- names(step_pois$coefficients)
i=0
for (i in 1:dim){
if(names(contatore_vect_POISS[i]) %in% coeff_stimati){
contatore_vect_POISS[i] <<- contatore_vect_POISS[i] + 1
}
}
}
# Use boot() function to perform bootstrap simulations
res_sw <- boot(x,get_alpha_POISS,R = n, parallel = "multicore")
library(tidyverse)
library(caret)
library(leaps)
library("MASS")
library("glmnet")
library ( ISLR2 )
library ( boot )
library(tree)
library ( randomForest )
library ( gbm )
library(recipes)
library("tseries")
library(tseries)
library(xtable)
library(groupdata2)
library(tseries)
library(corrplot)
library(gridExtra)
library(ggplot2)
# Define bootstrap function
get_alpha_POISS <- function(data,index){
temp_train <- sample(nrow(data), floor(nrow(data) * 0.75), replace = TRUE)
pois_mdl <- glm(Sleep.duration ~ . , data = x[temp_train,] , family = poisson)
step_pois <- stepAIC(pois_mdl, direction = "both",
trace = FALSE)
#parte per conteggio delle comparse
coeff_stimati <- names(step_pois$coefficients)
i=0
for (i in 1:dim){
if(names(contatore_vect_POISS[i]) %in% coeff_stimati){
contatore_vect_POISS[i] <<- contatore_vect_POISS[i] + 1
}
}
}
# Use boot() function to perform bootstrap simulations
res_sw <- boot(x,get_alpha_POISS,R = n, parallel = "multicore")
stepwise_significativi_poiss <- names(contatore_vect_POISS[contatore_vect_POISS > n/2])
stepwise_significativi_poiss <- stepwise_significativi_poiss[-1]
stepwise_final_model_poiss <- glm(reformulate(stepwise_significativi_poiss, "Sleep.duration"), data=x, family = 'poisson')
stepwise_significativi_poiss <- names(contatore_vect_POISS[contatore_vect_POISS > n/2])
stepwise_significativi_poiss <- stepwise_significativi_poiss[-1]
stepwise_final_model_poiss <- glm(reformulate(stepwise_significativi_poiss, "Sleep.duration"), data=x, family = 'poisson')
stepwise_final_model_poiss <- glm(reformulate(stepwise_significativi_poiss, "Awakenings"), data=x, family = 'poisson')
stepwise_significativi_poiss <- names(contatore_vect_POISS[contatore_vect_POISS > n/2])
stepwise_significativi_poiss <- stepwise_significativi_poiss[-1]
stepwise_final_model_poiss <- glm(reformulate(stepwise_significativi_poiss, "Sleep.duration"), data=x, family = 'poisson')
